/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.yithro.rules.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Expression service. Represents a row in the &quot;Yithro_Expression&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.yithro.rules.model.impl.ExpressionModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.yithro.rules.model.impl.ExpressionImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Expression
 * @generated
 */
@ProviderType
public interface ExpressionModel extends BaseModel<Expression> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a expression model instance should use the {@link Expression} interface instead.
	 */

	/**
	 * Returns the primary key of this expression.
	 *
	 * @return the primary key of this expression
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this expression.
	 *
	 * @param primaryKey the primary key of this expression
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the expression ID of this expression.
	 *
	 * @return the expression ID of this expression
	 */
	public long getExpressionId();

	/**
	 * Sets the expression ID of this expression.
	 *
	 * @param expressionId the expression ID of this expression
	 */
	public void setExpressionId(long expressionId);

	/**
	 * Returns the type of this expression.
	 *
	 * @return the type of this expression
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this expression.
	 *
	 * @param type the type of this expression
	 */
	public void setType(String type);

	/**
	 * Returns the field of this expression.
	 *
	 * @return the field of this expression
	 */
	@AutoEscape
	public String getField();

	/**
	 * Sets the field of this expression.
	 *
	 * @param field the field of this expression
	 */
	public void setField(String field);

	/**
	 * Returns the operation of this expression.
	 *
	 * @return the operation of this expression
	 */
	@AutoEscape
	public String getOperation();

	/**
	 * Sets the operation of this expression.
	 *
	 * @param operation the operation of this expression
	 */
	public void setOperation(String operation);

	/**
	 * Returns the value of this expression.
	 *
	 * @return the value of this expression
	 */
	@AutoEscape
	public String getValue();

	/**
	 * Sets the value of this expression.
	 *
	 * @param value the value of this expression
	 */
	public void setValue(String value);

	/**
	 * Returns the rule ID of this expression.
	 *
	 * @return the rule ID of this expression
	 */
	public long getRuleId();

	/**
	 * Sets the rule ID of this expression.
	 *
	 * @param ruleId the rule ID of this expression
	 */
	public void setRuleId(long ruleId);

}